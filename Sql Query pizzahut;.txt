create database pizzahut;
use pizzahut;

create table orders
(
order_id int not null primary key,
order_date date not null,
order_time time not null
);

select * from pizzas;

select * from pizza_types;

select * from orders;

select * from order_details;

# Retrieve the total number of orders place ?
select count(order_id) as tptal_order from orders;

# calculate the total revenue generated from pizzas sales?

SELECT 
    ROUND(SUM(pizzas.price * order_details.quantity),
            2) AS revenue
FROM
    pizzas
        JOIN
    order_details
WHERE
    pizzas.pizza_id = order_details.pizza_id;

# Identify the highest priced pizza ?

SELECT 
    pizza_types.name, pizzas.price AS highest_price
FROM
    pizzas
        JOIN
    pizza_types
WHERE
    pizza_types.pizza_type_id = pizzas.pizza_type_id
ORDER BY pizzas.price DESC
LIMIT 1;

# identify the most common pizza size order ?
 
SELECT 
    pizzas.size,
    COUNT(order_details.order_details_id) AS order_count
FROM
    pizzas
        JOIN
    order_details
WHERE
    pizzas.pizza_id = order_details.pizza_id
GROUP BY pizzas.size
ORDER BY order_count DESC
LIMIT 1;

# list the top 5 most order pizzas types along with their quantities.

SELECT 
    pizza_types.name, SUM(order_details.quantity) AS quantity
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.name
ORDER BY quantity DESC
LIMIT 5;

#join the necessary table to find the total quantity of each pizza category ordered ?
use pizzahut;
SELECT 
    pizza_types.category,
    SUM(order_details.quantity) AS quantity
FROM
    pizzas
        JOIN
    pizza_types ON pizzas.pizza_type_id = pizza_types.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category
ORDER BY quantity DESC;

# Determine the distribution of orders by hour of the day ?

SELECT 
    HOUR(order_time) AS hour, COUNT(order_id)
FROM
    orders
GROUP BY HOUR(order_time); 

# join the relevant tables to find the category_wise distribution of pizzas?

select category , count(name) from pizza_types
group by category;


# Group the orders by  date and calculate the average number of pizzas ordered per day?
SELECT 
    ROUND(AVG(quantity), 2)
FROM
    (SELECT 
        orders.order_date, SUM(order_details.quantity) AS quantity
    FROM
        orders
    JOIN order_details ON orders.order_id = order_details.order_id
    GROUP BY orders.order_date) AS order_quantity;
    
# Determine the top 3 most order pizzas types based on revenue ?

SELECT 
    pizza_types.name,
    SUM(order_details.quantity * pizzas.price) AS Revenue
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.name
ORDER BY Revenue DESC
LIMIT 3;

# calculate the percentage contribution of each pizza type to total revenue ?

SELECT 
    pizza_types.category,
    ROUND((SUM(order_details.quantity * pizzas.price)
             /(SELECT 
    ROUND(SUM(pizzas.price * order_details.quantity),
            2) AS Total_sales
FROM
    pizzas
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id))*100,2) as Revenue
FROM
    pizza_types
        JOIN
    pizzas ON pizza_types.pizza_type_id = pizzas.pizza_type_id
        JOIN
    order_details ON order_details.pizza_id = pizzas.pizza_id
GROUP BY pizza_types.category
ORDER BY Revenue DESC;


# Analyze the cumulative revenue generated over time ?


select order_date ,sum(revenue) over(order by order_date) as cum_rev from 
(select orders.order_date, SUM(order_details.quantity * pizzas.price) AS Revenue
from orders join order_details on orders.order_id = order_details.order_id
join pizzas on pizzas.pizza_id = order_details.pizza_id
group by orders.order_date) as Sales;













 










